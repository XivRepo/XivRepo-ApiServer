// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XIVRepo.EntityFramework;

namespace XIVRepo.EntityFramework.Migrations
{
    [DbContext(typeof(XivRepoDbContext))]
    [Migration("20210909000108_RemovedCountFields")]
    partial class RemovedCountFields
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("ModsInCategories", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ModId")
                        .HasColumnType("char(36)");

                    b.HasKey("CategoryId", "ModId");

                    b.HasIndex("ModId");

                    b.ToTable("ModsInCategories");
                });

            modelBuilder.Entity("ModsWithTags", b =>
                {
                    b.Property<Guid>("ModId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("ModId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ModsWithTags");
                });

            modelBuilder.Entity("UserAccountRoles", b =>
                {
                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("AccountId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserAccountRoles");
                });

            modelBuilder.Entity("XIVRepo.Core.Models.Accounts.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("DiscordId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("XIVRepo.Core.Models.Accounts.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("XIVRepo.Core.Models.Files.FileUpload", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("XIVRepo.Core.Models.Files.PreviewImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ImageDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ModId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ModId");

                    b.ToTable("ModPreviewImages");
                });

            modelBuilder.Entity("XIVRepo.Core.Models.Mods.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("XIVRepo.Core.Models.Mods.Mod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("DiscordLink")
                        .HasColumnType("longtext");

                    b.Property<string>("DonationLink")
                        .HasColumnType("longtext");

                    b.Property<string>("FullDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsNsfw")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ModStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WikiLink")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Mods");
                });

            modelBuilder.Entity("XIVRepo.Core.Models.Mods.ModFollowers", b =>
                {
                    b.Property<Guid>("FollowerId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ModId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("TimeFollowed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.HasKey("FollowerId", "ModId");

                    b.ToTable("ModFollowers");
                });

            modelBuilder.Entity("XIVRepo.Core.Models.Mods.Tag", b =>
                {
                    b.Property<Guid>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("XIVRepo.Core.Models.Mods.Version", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Changelog")
                        .HasColumnType("longtext");

                    b.Property<string>("ExternalUrl")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsMainVersion")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ModId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("PublishedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ReleaseType")
                        .HasColumnType("int");

                    b.Property<int>("TotalDownloads")
                        .HasColumnType("int");

                    b.Property<Guid?>("VersionFileId")
                        .HasColumnType("char(36)");

                    b.Property<string>("VersionNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ModId");

                    b.HasIndex("VersionFileId");

                    b.ToTable("ModVersions");
                });

            modelBuilder.Entity("ModsInCategories", b =>
                {
                    b.HasOne("XIVRepo.Core.Models.Mods.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XIVRepo.Core.Models.Mods.Mod", null)
                        .WithMany()
                        .HasForeignKey("ModId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModsWithTags", b =>
                {
                    b.HasOne("XIVRepo.Core.Models.Mods.Mod", null)
                        .WithMany()
                        .HasForeignKey("ModId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XIVRepo.Core.Models.Mods.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UserAccountRoles", b =>
                {
                    b.HasOne("XIVRepo.Core.Models.Accounts.Account", null)
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XIVRepo.Core.Models.Accounts.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("XIVRepo.Core.Models.Files.PreviewImage", b =>
                {
                    b.HasOne("XIVRepo.Core.Models.Mods.Mod", null)
                        .WithMany("PreviewImages")
                        .HasForeignKey("ModId");
                });

            modelBuilder.Entity("XIVRepo.Core.Models.Mods.Mod", b =>
                {
                    b.HasOne("XIVRepo.Core.Models.Accounts.Account", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("XIVRepo.Core.Models.Mods.Version", b =>
                {
                    b.HasOne("XIVRepo.Core.Models.Mods.Mod", "Mod")
                        .WithMany("Versions")
                        .HasForeignKey("ModId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XIVRepo.Core.Models.Files.FileUpload", "VersionFile")
                        .WithMany()
                        .HasForeignKey("VersionFileId");

                    b.Navigation("Mod");

                    b.Navigation("VersionFile");
                });

            modelBuilder.Entity("XIVRepo.Core.Models.Mods.Mod", b =>
                {
                    b.Navigation("PreviewImages");

                    b.Navigation("Versions");
                });
#pragma warning restore 612, 618
        }
    }
}
